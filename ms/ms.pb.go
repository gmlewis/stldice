// Code generated by protoc-gen-go.
// source: ms.proto
// DO NOT EDIT!

/*
Package ms is a generated protocol buffer package.

It is generated from these files:
	ms.proto

It has these top-level messages:
	VoxelRegion
	MapIn
	Triangle
	Vertex
*/
package ms

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type VoxelRegion struct {
	// Number of voxels to process in this subregion. Note that voxels are uniform
	// dimensions on all three axes.
	Nx int64 `protobuf:"varint,1,opt,name=nx" json:"nx,omitempty"`
	Ny int64 `protobuf:"varint,2,opt,name=ny" json:"ny,omitempty"`
	Nz int64 `protobuf:"varint,3,opt,name=nz" json:"nz,omitempty"`
	// Minimum Bounding Box (MBB) of region to be voxelized (in millimeters).
	Tx float64 `protobuf:"fixed64,4,opt,name=tx" json:"tx,omitempty"`
	Ty float64 `protobuf:"fixed64,5,opt,name=ty" json:"ty,omitempty"`
	Tz float64 `protobuf:"fixed64,6,opt,name=tz" json:"tz,omitempty"`
	// Scale representing the width of the largest dimension (in millimeters).
	Scale float64 `protobuf:"fixed64,7,opt,name=scale" json:"scale,omitempty"`
}

func (m *VoxelRegion) Reset()                    { *m = VoxelRegion{} }
func (m *VoxelRegion) String() string            { return proto.CompactTextString(m) }
func (*VoxelRegion) ProtoMessage()               {}
func (*VoxelRegion) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *VoxelRegion) GetNx() int64 {
	if m != nil {
		return m.Nx
	}
	return 0
}

func (m *VoxelRegion) GetNy() int64 {
	if m != nil {
		return m.Ny
	}
	return 0
}

func (m *VoxelRegion) GetNz() int64 {
	if m != nil {
		return m.Nz
	}
	return 0
}

func (m *VoxelRegion) GetTx() float64 {
	if m != nil {
		return m.Tx
	}
	return 0
}

func (m *VoxelRegion) GetTy() float64 {
	if m != nil {
		return m.Ty
	}
	return 0
}

func (m *VoxelRegion) GetTz() float64 {
	if m != nil {
		return m.Tz
	}
	return 0
}

func (m *VoxelRegion) GetScale() float64 {
	if m != nil {
		return m.Scale
	}
	return 0
}

// MapIn is the information sent to the mapper to voxelize a mesh.
type MapIn struct {
	VoxelRegion *VoxelRegion `protobuf:"bytes,1,opt,name=voxel_region,json=voxelRegion" json:"voxel_region,omitempty"`
	Base        bool         `protobuf:"varint,2,opt,name=base" json:"base,omitempty"`
	Triangles   []*Triangle  `protobuf:"bytes,3,rep,name=triangles" json:"triangles,omitempty"`
}

func (m *MapIn) Reset()                    { *m = MapIn{} }
func (m *MapIn) String() string            { return proto.CompactTextString(m) }
func (*MapIn) ProtoMessage()               {}
func (*MapIn) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MapIn) GetVoxelRegion() *VoxelRegion {
	if m != nil {
		return m.VoxelRegion
	}
	return nil
}

func (m *MapIn) GetBase() bool {
	if m != nil {
		return m.Base
	}
	return false
}

func (m *MapIn) GetTriangles() []*Triangle {
	if m != nil {
		return m.Triangles
	}
	return nil
}

// Triangle is a 3-vertex triangle in the mesh.
type Triangle struct {
	V1 *Vertex `protobuf:"bytes,1,opt,name=v1" json:"v1,omitempty"`
	V2 *Vertex `protobuf:"bytes,2,opt,name=v2" json:"v2,omitempty"`
	V3 *Vertex `protobuf:"bytes,3,opt,name=v3" json:"v3,omitempty"`
}

func (m *Triangle) Reset()                    { *m = Triangle{} }
func (m *Triangle) String() string            { return proto.CompactTextString(m) }
func (*Triangle) ProtoMessage()               {}
func (*Triangle) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Triangle) GetV1() *Vertex {
	if m != nil {
		return m.V1
	}
	return nil
}

func (m *Triangle) GetV2() *Vertex {
	if m != nil {
		return m.V2
	}
	return nil
}

func (m *Triangle) GetV3() *Vertex {
	if m != nil {
		return m.V3
	}
	return nil
}

// Vertex is a 3D vertex.
type Vertex struct {
	X float64 `protobuf:"fixed64,1,opt,name=x" json:"x,omitempty"`
	Y float64 `protobuf:"fixed64,2,opt,name=y" json:"y,omitempty"`
	Z float64 `protobuf:"fixed64,3,opt,name=z" json:"z,omitempty"`
}

func (m *Vertex) Reset()                    { *m = Vertex{} }
func (m *Vertex) String() string            { return proto.CompactTextString(m) }
func (*Vertex) ProtoMessage()               {}
func (*Vertex) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Vertex) GetX() float64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Vertex) GetY() float64 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *Vertex) GetZ() float64 {
	if m != nil {
		return m.Z
	}
	return 0
}

func init() {
	proto.RegisterType((*VoxelRegion)(nil), "ms.VoxelRegion")
	proto.RegisterType((*MapIn)(nil), "ms.MapIn")
	proto.RegisterType((*Triangle)(nil), "ms.Triangle")
	proto.RegisterType((*Vertex)(nil), "ms.Vertex")
}

func init() { proto.RegisterFile("ms.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 266 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x91, 0x3d, 0x6b, 0x84, 0x40,
	0x10, 0x86, 0x99, 0xf5, 0x34, 0x66, 0x94, 0x04, 0x96, 0x14, 0x4b, 0x2a, 0xb1, 0x92, 0x14, 0xc2,
	0xad, 0xbf, 0x22, 0x45, 0x9a, 0x21, 0xa4, 0x4c, 0xf0, 0xc2, 0x72, 0x1c, 0xf8, 0x71, 0xb8, 0x8b,
	0xa8, 0x29, 0xf3, 0xc7, 0x83, 0xe3, 0x86, 0x3b, 0xae, 0xf3, 0x99, 0x77, 0x70, 0x1e, 0xde, 0xc5,
	0xb8, 0xb5, 0xe5, 0x79, 0xe8, 0x5d, 0x2f, 0x45, 0x6b, 0xf3, 0x5f, 0xc0, 0xe4, 0xa3, 0x9f, 0x4c,
	0x43, 0xe6, 0x78, 0xea, 0x3b, 0xf9, 0x80, 0xa2, 0x9b, 0x14, 0x64, 0x50, 0x04, 0x24, 0xba, 0x89,
	0x79, 0x56, 0xc2, 0xf3, 0xcc, 0xbc, 0xa8, 0xc0, 0xf3, 0xb2, 0xb2, 0x9b, 0xd4, 0x2e, 0x83, 0x02,
	0x48, 0x38, 0xde, 0x77, 0xb3, 0x0a, 0x3d, 0xf3, 0xbe, 0x5b, 0x54, 0xe4, 0x79, 0x91, 0x4f, 0x18,
	0xda, 0xef, 0xba, 0x31, 0xea, 0x8e, 0x47, 0x1b, 0xe4, 0x3f, 0x18, 0xbe, 0xd5, 0xe7, 0xd7, 0x4e,
	0x6a, 0x4c, 0xc7, 0xd5, 0xe6, 0x6b, 0x60, 0x1d, 0x16, 0x49, 0xf4, 0x63, 0xd9, 0xda, 0xf2, 0xca,
	0x92, 0x92, 0xf1, 0x4a, 0x59, 0xe2, 0xee, 0x50, 0x5b, 0xc3, 0x92, 0x31, 0xf1, 0xb7, 0x7c, 0xc1,
	0x7b, 0x37, 0x9c, 0xea, 0xee, 0xd8, 0x18, 0xab, 0x82, 0x2c, 0x28, 0x12, 0x9d, 0xae, 0x3f, 0x79,
	0xf7, 0x43, 0xba, 0xc4, 0xf9, 0x27, 0xc6, 0xff, 0x63, 0xf9, 0x8c, 0x62, 0xdc, 0xfb, 0xab, 0xc8,
	0x57, 0xcd, 0xe0, 0xcc, 0x44, 0x62, 0xdc, 0x73, 0xa6, 0xf9, 0xca, 0x6d, 0xa6, 0x39, 0xab, 0xb8,
	0x96, 0xdb, 0xac, 0xca, 0x35, 0x46, 0x1b, 0xc9, 0x14, 0x61, 0xeb, 0x16, 0x08, 0x98, 0xb6, 0x66,
	0x81, 0x60, 0x5e, 0x69, 0xeb, 0x15, 0x08, 0x96, 0x43, 0xc4, 0x2f, 0x54, 0xfd, 0x05, 0x00, 0x00,
	0xff, 0xff, 0x24, 0xa8, 0x76, 0x03, 0xad, 0x01, 0x00, 0x00,
}
